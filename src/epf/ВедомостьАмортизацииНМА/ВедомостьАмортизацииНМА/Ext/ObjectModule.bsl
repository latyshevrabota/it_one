

Функция СведенияОВнешнейОбработке() Экспорт
	
ПараметрыРегистрации = Новый Структура;
ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
ПараметрыРегистрации.Вставить("Наименование", "Ведомость амортизации НМА");
ПараметрыРегистрации.Вставить("Версия", "v 1.1");
ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
ПараметрыРегистрации.Вставить("Информация", "v 1.1");
ПараметрыРегистрации.Вставить("ВерсияБСП", "2.0.7.6");

ТаблицаКоманд = ПолучитьТаблицуКоманд();
ДобавитьКоманду(ТаблицаКоманд,"Ведомость амортизации НМА","1","ОткрытиеФормы",Истина,"");
ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

Возврат ПараметрыРегистрации;

КонецФункции

Функция ПолучитьТаблицуКоманд()
	
Команды = Новый ТаблицаЗначений;
Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
НоваяКоманда = ТаблицаКоманд.Добавить();
НоваяКоманда.Представление = Представление;
НоваяКоманда.Идентификатор = Идентификатор;
НоваяКоманда.Использование = Использование;
НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	//КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение = "ООО ""Возрождение ВВЦ""" + Символы.ПС + "Ведомость амортизации НМА" + Символы.ПС + "Выводимые данные:	БУ (данные бухгалтерского учета)";
	
	СтандартнаяОбработка = Ложь;
	КомпоновщикМакет = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
    ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);
	
	//СписокОрганизаций = ЭтотОбъект.Организация;	
	//СтрокаСписокОрганизаций="";
	//СтрокаСписокОрганизаций=СтрокаСписокОрганизаций+Строка(СписокОрганизаций)+ Символы.ПС;	
	//Если ЭтотОбъект.НачалоПериода<> '00010101' и ЭтотОбъект.КонецПериода<> '00010101' Тогда
	//КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение = СтрокаСписокОрганизаций + Символы.ПС + "Ведомость амортизации НМА за период с " + Строка( Формат(ЭтотОбъект.НачалоПериода,"ДФ=dd.MM.yyyy")) + " по " + Строка(Формат(ЭтотОбъект.КонецПериода,"ДФ=dd.MM.yyyy")); 
	//КОнецЕсли;
	//Если ЭтотОбъект.НачалоПериода= '00010101' и ЭтотОбъект.КонецПериода<> '00010101' Тогда
	//КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение = СтрокаСписокОрганизаций + Символы.ПС + "Ведомость амортизации НМА" +  " по " + Строка(Формат(ЭтотОбъект.КонецПериода,"ДФ=dd.MM.yyyy")); 
	//КОнецЕсли;
	//Если ЭтотОбъект.НачалоПериода<> '00010101' и ЭтотОбъект.КонецПериода= '00010101' Тогда
	//КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("Заголовок").Значение = СтрокаСписокОрганизаций + Символы.ПС + "Ведомость амортизации НМА с " + Строка( Формат(ЭтотОбъект.НачалоПериода,"ДФ=dd.MM.yyyy")); 
	//КОнецЕсли;
	//Если ЭтотОбъект.НачалоПериода= '00010101' и ЭтотОбъект.КонецПериода= '00010101' Тогда 
	//КОнецЕсли;

КонецПроцедуры 
